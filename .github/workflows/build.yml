name: CI

on:
  pull_request_target:
    types:
      - opened
      - synchronize
  push:
    branches:
      - master

permissions:
  contents: read

jobs:
  authorize:
    name: Authorize
    environment: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.repo.full_name != github.repository && 'external' || 'internal' }}
    runs-on: ubuntu-latest
    steps:
      - run: true

  build-and-test:
    needs: authorize # Require approval before running on forked pull requests

    name: Build and Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.python-version }}"

      - name: Install dependencies
        run: |
          sudo ethtool -K eth0 tx off rx off
          sudo apt install bubblewrap
          export PIPENV_VENV_IN_PROJECT=1
          export PIP_IGNORE_INSTALLED=1
          python -m pip install --no-cache-dir --user pip
          python -m pip install --no-cache-dir --user pipenv

      - name: Run tests
        run: |
          if [ -f requirements.txt ]; then python -m pipenv install --dev -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then python -m pipenv install --dev -r requirements-dev.txt; fi
          pipenv --python `python --version | grep -Eo '3\.[0-9]+'` sync --dev
          python -m pipenv run coverage run -m unittest

      # - name: Run tests
      #   run: |
      #     if [ -f requirements.txt ]; then pipenv install --dev -r requirements.txt; fi
      #     if [ -f requirements-dev.txt ]; then pipenv install --dev -r requirements-dev.txt; fi
      #     bwrap \
      #       --unshare-all \
      #       --clearenv \
      #       --setenv EXAMPLE VALUE \
      #       --ro-bind / / \
      #       --bind ${{ github.workspace }} ${{ github.workspace }} \
      #       --tmpfs $HOME \
      #       --tmpfs /tmp \
      #       --tmpfs /var \
      #       --tmpfs /run --dir /run/user/$(id -u) \
      #       --dev /dev \
      #       --proc /proc \
      #       --die-with-parent \
      #       --new-session \
      #       python -m pipenv run coverage run -m unittest

      - name: Run linting
        run: pre-commit run --all-files

      - if: ${{ matrix.python-version == '3.10' }}
        name: Upload coverage
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # pin@3.1.4

      - if: ${{ matrix.python-version == '3.10' }}
        name: Build documentation
        run: sphinx-build ./docs/source ./docs/build --keep-going -n -a -b html
